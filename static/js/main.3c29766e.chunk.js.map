{"version":3,"sources":["Services/ApiService.js","Components/BlogItemComponent.js","Components/MarkdownToHtmlComponent.js","Components/BlogItemListComponent.js","Components/BodyComponent.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["ApiService","Object","classCallCheck","this","url","fetch","then","response","json","data","BlogItemComponent","React","Component","props","blogItem","react_default","a","createElement","class","key","blog","position","src","alt","Date","createdOn","getDate","getMonth","href","title","info","BlogItemListComponent","console","log","blogs","length","blogsList","map","items","item","Components_BlogItemComponent","BodyContainer","_this","possibleConstructorReturn","getPrototypeOf","call","state","bindBlogItemsToDomElement","_this2","getData","count","i","body","substring","created_at","milestone","description","due_on","push","sessionStorage","setItem","JSON","stringify","setState","_blogs","getItem","parse","getBlogList","Components_BlogItemListComponent","App","BodyComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3c29766e.chunk.js","sourcesContent":["export default class ApiService {\r\n\r\n  constructor() {\r\n\r\n  } // END constructor\r\n\r\n  getData(url) { \r\n\r\n   return fetch(url)\r\n      // Get the response\r\n      // If we want text, call response.text()\r\n      .then(response => response.json()      \r\n      )\r\n      .then((data) => {\r\n        // Do something with the response       \r\n        return data;\r\n      });\r\n\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MarkdownToHtml from '../Components/MarkdownToHtmlComponent';\r\n\r\nconst BlogItemComponent = (props) => {\r\n\r\n  const blogItem = (   \r\n   \r\n        <div class=\"item\" key={props.blog.position}>\r\n\r\n          {/* image */}\r\n          <div class=\"img\">\r\n            <img src=\"\" alt=\"\" />\r\n          </div>\r\n\r\n          {/* info */}\r\n          <div class=\"info\">\r\n\r\n            <div class=\"date\">\r\n              <span> { new Date(props.blog.createdOn).getDate()} <br /> { new Date(props.blog.createdOn).getMonth()}</span>\r\n            </div>\r\n\r\n            <a href=\"\">\r\n              <h3>{ props.blog.title}</h3>\r\n            </a>\r\n\r\n            <p>{ props.blog.info}</p>\r\n\r\n            <a href=\"#0\" class=\"user\"><i class=\"fas fa-user\"></i>Admin</a>\r\n            <a href=\"#0\" class=\"more\"><i class=\"fas fa-long-arrow-alt-right\"></i></a>\r\n\r\n          </div>\r\n\r\n        </div>\r\n    \r\n  )\r\n\r\n  return   <div class=\"col-md-6 col-lg-4\" >{ blogItem }</div>\r\n}\r\n\r\nexport default BlogItemComponent","import React from 'react';\r\nimport Markdown from 'react-markdown';\r\n\r\nclass MarkdownToHtmlComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contentText: this.props.contentText\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (<Markdown source={this.state.contentText} />);\r\n  }\r\n\r\n}\r\n\r\nexport default MarkdownToHtmlComponent;","import React from 'react';\nimport BlogItem from '../Components/BlogItemComponent';\n\nconst BlogItemListComponent = (props) => {\n\nconsole.log(\"props.blogs.length \" + props.blogs.length);\n  const blogsList = props.blogs.map((blog) => {\n\n    return (\n      <div class=\"row blog-item-card\">\n        {\n          blog.items.map((item) => {\n          \n          return (\n            <BlogItem blog={item} />\n          )\n\n        })}\n      </div>\n    )\n\n  });\n\n\n  return (\n\n    <div class=\"container\">\n\n      {/* header of section */}\n      <div class=\"blog-head text-center\">\n        <h2>Debug Inside</h2>\n        <h6>Simplicity is the most complicated thing until we learn how to break down the complexity.....</h6>\n      </div>\n\n      {/*<!-- blog items */}\n      {blogsList}\n\n    </div>\n\n  );\n}\n\nexport default BlogItemListComponent","import React from 'react';\r\nimport ApiService from '../Services/ApiService';\r\nimport BlogItemList from '../Components/BlogItemListComponent';\r\n\r\nclass BodyContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      blogs: []\r\n    };\r\n\r\n    //this.getBlogList();\r\n\r\n  }\r\n\r\n  blogs = [];\r\n\r\n  componentDidMount() {\r\n    this.bindBlogItemsToDomElement();\r\n  }\r\n\r\n  getBlogList() {\r\n    console.log(\"calling getBlogList\");\r\n    const apiService = new ApiService();\r\n    const url = 'https://api.github.com/repos/abhi-debuginside/blog/issues';\r\n    //const url = 'https://api.github.com/repos/abhi-debuginside/abhi-debuginside.github.io/issues';\r\n\r\n    var result = apiService.getData(url);\r\n\r\n    result.then((data) => {\r\n      let position = 1;\r\n      let count = 1;\r\n      let items = [];\r\n      console.log(\"data.length : \" + data.length);\r\n      for (let i = 0; i < data.length; i++) {\r\n        position = i + 1;\r\n        if (count <= 3) {\r\n          console.log(\" blog.title : \" + data[i].title);\r\n          //console.log(\"count : \" + count);\r\n\r\n          let info = data[i].body.substring(0, 150);\r\n          let createdOn = new Date(data[i].created_at);\r\n\r\n          if (data[i].milestone) {\r\n            if (data[i].milestone.description) {\r\n              info = data[i].milestone.description;\r\n            }\r\n\r\n            if (data[i].milestone.due_on) {\r\n              createdOn = new Date(data[i].milestone.due_on);\r\n            }\r\n          }\r\n\r\n          items.push({ position: position, title: data[i].title, body: data[i].body, info: info, createdOn: createdOn });\r\n          console.log(\"items for count - \" + count);\r\n          console.log(items);\r\n          count++;\r\n        }\r\n\r\n        if (count > 3) {\r\n          console.log(\"reset for count called\" + count);\r\n\r\n          //reset\r\n          count = 1;\r\n\r\n          // pushing to blog array\r\n          this.blogs.push({ items: items });\r\n          console.log(\"Pushed to blogs on reset section at index : \" + i);\r\n          console.log(this.blogs);\r\n          items = [];\r\n        }\r\n\r\n        console.log(\"index : \" + i);\r\n        if (position == data.length && items.length > 0) {\r\n          this.blogs.push({ items: items });\r\n          console.log(\"Pushed to blogs at index : \" + i);\r\n        }\r\n      }\r\n      console.log(\"this.blogs : \");\r\n      console.log(this.blogs);\r\n      sessionStorage.setItem(\"blogs\", JSON.stringify(this.blogs));\r\n      this.setState({ blogs: this.blogs });\r\n\r\n    });\r\n  }\r\n\r\n  bindBlogItemsToDomElement() {\r\n    var _blogs = sessionStorage.getItem(\"blogs\");\r\n    if (_blogs) {\r\n      //   console.log(\"_blogs :\" + _blogs);\r\n      this.blogs = JSON.parse(_blogs);\r\n      this.setState({ blogs: this.blogs });\r\n    }\r\n    else {\r\n      this.getBlogList();\r\n      // this.blogs = [\r\n      //   {\r\n      //     items: [\r\n      //       {\r\n      //         position: 1,\r\n      //         title: 'Test Blog 1',\r\n      //         body: 'Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.',\r\n      //         info: 'Test blog 1 Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.'\r\n      //       },\r\n      //       {\r\n      //         position: 2,\r\n      //         title: 'Test Blog 2',\r\n      //         body: 'Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.',\r\n      //         info: 'Test blog 1 Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.'\r\n      //       },\r\n      //       {\r\n      //         position: 3,\r\n      //         title: 'Test Blog 3',\r\n      //         body: 'Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.',\r\n      //         info: 'Test blog 1 Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.'\r\n      //       }\r\n      //     ]\r\n      //   },\r\n      //   {\r\n      //     items: [\r\n      //       {\r\n      //         position: 4,\r\n      //         title: 'Test Blog 4',\r\n      //         body: 'Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.',\r\n      //         info: 'Test blog 1 Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.'\r\n      //       },\r\n      //       {\r\n      //         position: 5,\r\n      //         title: 'Test Blog 5',\r\n      //         body: 'Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.',\r\n      //         info: 'Test blog 1 Lorem ipsum dolor sit amet conse ctetur, adipi sicing elit. Nisi sapiente hic fugiat delectus dicta delectus dicta.'\r\n      //       }\r\n      //     ]\r\n      //   }\r\n      // ];\r\n\r\n      // this.setState({ blogs: this.blogs });\r\n    }\r\n  }\r\n\r\n  showInGroup() {\r\n    var length = this.state.blogs.length;\r\n    console.log(\"1length : \" + length);\r\n    const colmBlogs = [];\r\n    let i = 0;\r\n    let rowNumber = 1;\r\n\r\n    this.state.blogs.map((blog) => {\r\n      return (\r\n        blog.items.map((item) => {\r\n          console.log(item.title);\r\n        })\r\n      )\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BlogItemList blogs={this.state.blogs} />\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default BodyContainer;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport BodyContainer from './Components/BodyComponent';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (<BodyContainer />);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}