{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","headerContainer","padding","spacing","textAlign","color","palette","text","secondary","paper","secondaryTail","backgroundColor","main","endSection","height","paddingBottom","margin","orange","getContrastText","deepOrange","purple","deepPurple","giftContainer","marginTop","App","classes","className","Grid","container","item","xs","Typography","variant","Timeline","align","comments","map","comment","index","TimelineItem","TimelineSeparator","TimelineDot","Slide","direction","timeout","in","mountOnEnter","unmountOnExit","Avatar","initials","TimelineConnector","TimelineContent","Paper","elevation","author","href","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9536d63a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Container,\n  Avatar,\n  Grid,\n  Paper,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Link,\n  Slide,\n\n} from '@material-ui/core';\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport HotelIcon from '@material-ui/icons/Hotel';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport Typography from '@material-ui/core/Typography';\n\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\n\nimport comments from './comment.json';\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow: 1,\n  },\n  headerContainer: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paper: {\n    padding: '6px 16px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  endSection: {\n    height: '150px',\n    paddingBottom: '500px',\n    margin: '50px',\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  giftContainer: {\n    height: '800px',\n    marginTop: '50px',\n  }\n\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <section>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <p className={classes.headerContainer}>\n              <code> <Typography variant='h3'>Thank you Riyas</Typography></code>\n            </p>\n          </Grid>\n        </Grid>\n      </section>\n\n\n      <section>\n        <Timeline align=\"alternate\">\n          {comments.map((comment, index) => (\n\n            <TimelineItem>\n              <TimelineSeparator>\n                <TimelineDot variant=\"outlined\">\n                  <Slide direction={index % 2 === 0 ? 'left' : 'right'} timeout={1500} in={true} mountOnEnter unmountOnExit>\n                    <Avatar className={index % 2 === 0 ? classes.orange : classes.purple}>{comment.initials}</Avatar>\n                  </Slide>\n\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Slide direction={index % 2 === 0 ? 'up' : 'down'} timeout={1500} in={true} mountOnEnter unmountOnExit>\n                  <Paper elevation={3} className={classes.paper}>\n                    <p>\n                      <code> {comment.comment}</code>\n                    </p>\n                    <Typography variant=\"caption\" >-- <i>{comment.author}</i></Typography>\n                  </Paper>\n                </Slide>\n              </TimelineContent>\n            </TimelineItem>\n          ))\n          }\n        </Timeline>\n      </section>\n      <section className={classes.endSection}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <div className={classes.headerContainer}>\n              <a href=\"#gift\">\n                <Typography variant=\"h1\" > We have gift for you!!</Typography>\n              </a>\n            </div>\n          </Grid>\n        </Grid>\n      </section>\n\n\n      <section className={classes.giftContainer} id=\"gift\">\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <div className={classes.headerContainer}>\n              <Typography variant=\"h1\" > Coming Soon.....</Typography>\n              <Typography variant=\"h1\" > May be never!!!!.....</Typography>\n            </div>\n          </Grid>\n        </Grid>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}